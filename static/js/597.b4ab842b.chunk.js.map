{"version":3,"file":"static/js/597.b4ab842b.chunk.js","mappings":"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","sources":["api-tmdb.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","page/Movies/Movies.styled.js","page/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios'\r\n\r\n\r\nconst options = {\r\n  method: 'GET',\r\n  headers: {\r\n    accept: 'application/json',\r\n    Authorization:\r\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzYjI3MGE5MDQxOWZmZGU3NTdhNTMwZjc5ZGEwZjk5MyIsInN1YiI6IjY1MTRhOTZlYzUwYWQyMDE0ZGNiZDRhMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.0cnUSQym0igy96KjBCSKsZxHrfcfXCa_zP5yeOXpcdA',\r\n  },\r\n};\r\nexport function getApi() {\r\n  return axios\r\n    .get(\r\n      'https://api.themoviedb.org/3/trending/all/day?language=en-US',\r\n      options\r\n    )\r\n}\r\n\r\nexport function getApiMovie(movieId) {\r\n  return axios\r\n    .get(`https://api.themoviedb.org/3/movie/${movieId}`, options)\r\n}\r\n\r\nexport function getApiCasts(movieId) {\r\n  return axios\r\n    .get(`https://api.themoviedb.org/3/movie/${movieId}/credits`, options)\r\n}\r\n\r\nexport function getApiReviews(movieId) {\r\n  return axios\r\n    .get(`https://api.themoviedb.org/3/movie/${movieId}/reviews`, options)\r\n}\r\n\r\nexport function getApiQuery( query) {\r\n  const params = {\r\n    params: {\r\n      query: `${query}`,\r\n    },\r\n  };\r\n  return axios\r\n    .get(`https://api.themoviedb.org/3/search/movie`, {...options, ...params})\r\n    \r\n}","import styled from \"@emotion/styled\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const MovieList = styled.ul`\r\n    list-style: none;\r\n`;\r\n\r\nexport const MovieItem = styled.li`\r\nmargin-bottom: 8px;\r\n` \r\n\r\nexport const LinkItm = styled(Link)`\r\n    text-decoration: none;\r\n    color: black;\r\n    font-weight: 600;\r\n    font-size: 18px;\r\n    color: white;\r\n    &:hover{\r\n        color: teal;\r\n    }\r\n`","import { MovieItem, MovieList, LinkItm } from './MoviesList.styled';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nexport default function MoviesList({movies}){\r\n    const location = useLocation()\r\n    return (\r\n      <MovieList>\r\n        {movies.map(movie => (\r\n          <MovieItem key={movie.id}>\r\n            <LinkItm to={`/movies/${movie.id}`} state={{ from: location }}>\r\n              {movie.title}\r\n            </LinkItm>\r\n          </MovieItem>\r\n        ))}\r\n      </MovieList>\r\n    );\r\n}","import styled from \"@emotion/styled\";\r\n\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 8px 32px 8px 8px;\r\n  border-radius: 4px;\r\n  font: inherit;\r\n  margin-right: 16px;\r\n  background-color: #425466;\r\n  border: 2px solid teal;\r\n  outline: none;\r\n  color: white;\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const Btn = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  text-decoration: none;\r\n  color: white;\r\n  font-weight: 500;\r\n  font-size: 18px;\r\n  background-color: #34424f;\r\n  border: none;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: white;\r\n    background-color: teal;\r\n    border-color: teal;\r\n  }\r\n`;\r\n\r\n\r\n","import { useSearchParams } from \"react-router-dom\";\r\nimport { useState, useEffect} from \"react\";\r\nimport { getApiQuery } from \"api-tmdb\";\r\nimport {Form, Input, Btn} from 'page/Movies/Movies.styled'\r\nimport MoviesList from \"components/MoviesList/MoviesList\";\r\n\r\nexport default function Movies() {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const movieName = searchParams.get('query') ?? '';\r\n  const [movies, setMovies] = useState([]);\r\n  const [query, setQuery] = useState('')\r\n\r\n  useEffect(() => {\r\n    if (movieName !== '') {\r\n      getApiQuery(movieName).then(r => {\r\n        setMovies(r.data.results);\r\n      }).catch(r => { console.error(r.response.data.status_message); })\r\n    }\r\n  }, [movieName]);\r\n  \r\n  const updateQuery = (query) => {\r\n      setQuery(query);\r\n  }\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n    if (query === '') {\r\n      return;\r\n    }\r\n    setSearchParams({ query });\r\n  }\r\n\r\n\r\n    return (\r\n      <>\r\n        <Form onSubmit={submitForm}>\r\n          <Input\r\n            value={query}\r\n            onChange={e => {\r\n              updateQuery(e.target.value);\r\n            }}\r\n          />\r\n          <Btn type=\"submit\">Search</Btn>\r\n        </Form>\r\n        <MoviesList movies={movies} />\r\n      </>\r\n    );\r\n}"],"names":["options","method","headers","accept","Authorization","getApi","axios","get","getApiMovie","movieId","concat","getApiCasts","getApiReviews","getApiQuery","query","params","_objectSpread","MovieList","styled","ul","_templateObject","_taggedTemplateLiteral","MovieItem","li","_templateObject2","LinkItm","Link","_templateObject3","MoviesList","_ref","movies","location","useLocation","_jsx","children","map","movie","to","id","state","from","title","Form","form","Input","input","Btn","button","Movies","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","movieName","_useState","useState","_useState2","setMovies","_useState3","_useState4","setQuery","useEffect","then","r","data","results","catch","console","error","response","status_message","_jsxs","_Fragment","onSubmit","e","preventDefault","value","onChange","updateQuery","target","type"],"sourceRoot":""}