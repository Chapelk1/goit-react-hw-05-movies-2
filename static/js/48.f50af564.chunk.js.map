{"version":3,"file":"static/js/48.f50af564.chunk.js","mappings":"gSAGMA,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAGC,SAASC,IACd,OAAOC,EAAAA,EACJC,IACC,+DACAP,EAEN,CAEO,SAASQ,EAAYC,GAC1B,OAAOH,EAAAA,EACJC,IAAI,sCAADG,OAAuCD,GAAWT,EAC1D,CAEO,SAASW,EAAYF,GAC1B,OAAOH,EAAAA,EACJC,IAAI,sCAADG,OAAuCD,EAAO,YAAYT,EAClE,CAEO,SAASY,EAAcH,GAC5B,OAAOH,EAAAA,EACJC,IAAI,sCAADG,OAAuCD,EAAO,YAAYT,EAClE,CAEO,SAASa,EAAaC,GAC3B,IAAMC,EAAS,CACbA,OAAQ,CACND,MAAM,GAADJ,OAAKI,KAGd,OAAOR,EAAAA,EACJC,IAAI,6CAADS,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAD,EAAkDhB,GAAYe,GAEtE,C,sICzCaE,EAAOC,EAAAA,EAAOC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oDAIhBC,EAAWJ,EAAAA,EAAOK,GAAEC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,uFAQpBI,EAAQP,EAAAA,EAAOQ,GAAEC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,mDAKjBO,EAAQV,EAAAA,EAAOW,EAACC,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,2B,SChBd,SAASU,EAAWC,GAAe,IAAZC,EAAOD,EAAPC,QAGlC,OACIC,EAAAA,EAAAA,KAACjB,EAAI,CAAAkB,SACHF,EAAQG,QAAQC,KAAI,SAAAC,GAAM,OACxBC,EAAAA,EAAAA,MAACjB,EAAQ,CAAAa,SAAA,EACPI,EAAAA,EAAAA,MAACd,EAAK,CAAAU,SAAA,EACJD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,YAAW,IAAEG,EAAOE,WAEzBN,EAAAA,EAAAA,KAACN,EAAK,CAAAO,SAAEG,EAAOG,YAJFH,EAAOI,GAKX,KAIvB,CChBO,IAAMd,EAAQV,EAAAA,EAAOW,EAACT,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6BCMd,SAASsB,IACpB,IAAQlC,GAAYmC,EAAAA,EAAAA,MAAZnC,QACRoC,GAA8BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCZ,EAAOc,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAAsCJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAkBpC,OAhBEG,EAAAA,EAAAA,YAAU,YACR1C,EAAAA,EAAAA,IAAcH,GACX8C,MAAK,SAAAC,GACuB,IAAvBA,EAAEC,KAAKC,aAIXT,EAAWO,EAAEC,MACbJ,GAAe,IAJbA,GAAe,EAKnB,IACCM,OAAM,SAAAH,GACLH,GAAe,GACfO,QAAQC,MAAML,EAAEM,SAASL,KAAKM,eAChC,GACJ,GAAG,CAACtD,KAGJ8B,EAAAA,EAAAA,MAAAyB,EAAAA,SAAA,CAAA7B,SAAA,CACGiB,IAAelB,EAAAA,EAAAA,KAACN,EAAK,CAAAO,SAAC,8CACtBF,IAAWC,EAAAA,EAAAA,KAACH,EAAW,CAACE,QAASA,MAGxC,C","sources":["api-tmdb.js","components/ReviewsList/ReviewsList.styled.js","components/ReviewsList/ReviewsList.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios'\r\n\r\n\r\nconst options = {\r\n  method: 'GET',\r\n  headers: {\r\n    accept: 'application/json',\r\n    Authorization:\r\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzYjI3MGE5MDQxOWZmZGU3NTdhNTMwZjc5ZGEwZjk5MyIsInN1YiI6IjY1MTRhOTZlYzUwYWQyMDE0ZGNiZDRhMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.0cnUSQym0igy96KjBCSKsZxHrfcfXCa_zP5yeOXpcdA',\r\n  },\r\n};\r\nexport function getApi() {\r\n  return axios\r\n    .get(\r\n      'https://api.themoviedb.org/3/trending/all/day?language=en-US',\r\n      options\r\n    )\r\n}\r\n\r\nexport function getApiMovie(movieId) {\r\n  return axios\r\n    .get(`https://api.themoviedb.org/3/movie/${movieId}`, options)\r\n}\r\n\r\nexport function getApiCasts(movieId) {\r\n  return axios\r\n    .get(`https://api.themoviedb.org/3/movie/${movieId}/credits`, options)\r\n}\r\n\r\nexport function getApiReviews(movieId) {\r\n  return axios\r\n    .get(`https://api.themoviedb.org/3/movie/${movieId}/reviews`, options)\r\n}\r\n\r\nexport function getApiQuery( query) {\r\n  const params = {\r\n    params: {\r\n      query: `${query}`,\r\n    },\r\n  };\r\n  return axios\r\n    .get(`https://api.themoviedb.org/3/search/movie`, {...options, ...params})\r\n    \r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const List = styled.ul`\r\nlist-style: none;\r\npadding-bottom: 40px;\r\n`\r\nexport const ListItem = styled.li`\r\n  max-width: 500px;\r\n\r\n  &:not(:last-child){\r\n    margin-bottom: 40px;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n  color: white;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const Descr = styled.p`\r\n  color: white;\r\n`;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { List, ListItem, Title, Descr } from './ReviewsList.styled';\r\n\r\n\r\nexport default function ReviewsList({ reviews }) {\r\n   \r\n\r\n    return (\r\n        <List> \r\n        { reviews.results.map(review => (\r\n            <ListItem key={review.id}>\r\n              <Title>\r\n                <b>Author:</b> {review.author}\r\n              </Title>\r\n              <Descr>{review.content}</Descr>\r\n            </ListItem>\r\n          ))}\r\n      </List>\r\n    );\r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const Descr = styled.p`\r\n    color: white;\r\n`","import { useParams} from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { getApiReviews } from 'api-tmdb';\r\nimport ReviewsList from 'components/ReviewsList/ReviewsList';\r\nimport {Descr} from './Reviews.styled'\r\n\r\n\r\n\r\nexport default function Reviews() {\r\n    const { movieId } = useParams();\r\n    const [reviews, setReviews] = useState(null);\r\n    const [visibleText, setVisibleText] = useState(false);\r\n  \r\n    useEffect(() => {\r\n      getApiReviews(movieId)\r\n        .then(r => {\r\n          if (r.data.total_pages === 0) {\r\n            setVisibleText(true);\r\n            return;\r\n          }\r\n          setReviews(r.data);\r\n          setVisibleText(false);\r\n        })\r\n        .catch(r => {\r\n          setVisibleText(true);\r\n          console.error(r.response.data.status_message);\r\n        });\r\n    }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      {visibleText && <Descr>We don`t have any reviews for this movie.</Descr>}\r\n      {reviews && <ReviewsList reviews={reviews} />}\r\n    </>\r\n  )\r\n}\r\n"],"names":["options","method","headers","accept","Authorization","getApi","axios","get","getApiMovie","movieId","concat","getApiCasts","getApiReviews","getApiQuery","query","params","_objectSpread","List","styled","ul","_templateObject","_taggedTemplateLiteral","ListItem","li","_templateObject2","Title","h3","_templateObject3","Descr","p","_templateObject4","ReviewsList","_ref","reviews","_jsx","children","results","map","review","_jsxs","author","content","id","Reviews","useParams","_useState","useState","_useState2","_slicedToArray","setReviews","_useState3","_useState4","visibleText","setVisibleText","useEffect","then","r","data","total_pages","catch","console","error","response","status_message","_Fragment"],"sourceRoot":""}