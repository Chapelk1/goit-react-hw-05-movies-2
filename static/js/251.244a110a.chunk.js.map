{"version":3,"file":"static/js/251.244a110a.chunk.js","mappings":"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","sources":["api-tmdb.js","page/MovieDetails/MovieDetails.styled.js","page/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios'\r\n\r\n\r\nconst options = {\r\n  method: 'GET',\r\n  headers: {\r\n    accept: 'application/json',\r\n    Authorization:\r\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzYjI3MGE5MDQxOWZmZGU3NTdhNTMwZjc5ZGEwZjk5MyIsInN1YiI6IjY1MTRhOTZlYzUwYWQyMDE0ZGNiZDRhMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.0cnUSQym0igy96KjBCSKsZxHrfcfXCa_zP5yeOXpcdA',\r\n  },\r\n};\r\nexport function getApi() {\r\n  return axios\r\n    .get(\r\n      'https://api.themoviedb.org/3/trending/all/day?language=en-US',\r\n      options\r\n    )\r\n}\r\n\r\nexport function getApiMovie(movieId) {\r\n  return axios\r\n    .get(`https://api.themoviedb.org/3/movie/${movieId}`, options)\r\n}\r\n\r\nexport function getApiCasts(movieId) {\r\n  return axios\r\n    .get(`https://api.themoviedb.org/3/movie/${movieId}/credits`, options)\r\n}\r\n\r\nexport function getApiReviews(movieId) {\r\n  return axios\r\n    .get(`https://api.themoviedb.org/3/movie/${movieId}/reviews`, options)\r\n}\r\n\r\nexport function getApiQuery( query) {\r\n  const params = {\r\n    params: {\r\n      query: `${query}`,\r\n    },\r\n  };\r\n  return axios\r\n    .get(`https://api.themoviedb.org/3/search/movie`, {...options, ...params})\r\n    \r\n}","import { Link } from \"react-router-dom\";\r\nimport styled from \"@emotion/styled\";\r\n\r\n\r\nexport const LinkItm = styled(Link)`\r\n  display: inline-block;\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  text-decoration: none;\r\n  color: white;\r\n  font-weight: 500;\r\n  background-color: #34424f;\r\n\r\n  &:hover {\r\n    color: white;\r\n    background-color: teal;\r\n    border-color: teal;\r\n  }\r\n`;\r\n\r\nexport const Wraper = styled.div`\r\n display: flex;\r\n gap: 40px;\r\n padding-top: 20px;\r\n padding-bottom: 20px;\r\n`\r\n\r\nexport const Thumb = styled.div`\r\n  max-width: 300px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`;\r\nexport const WraperImg = styled.div`\r\n  max-width: 100%;\r\n  margin-bottom: 20px;\r\n`;\r\nexport const WraperBtn = styled.div`\r\n  > a:not(:last-child){\r\n    margin-right: 20px;\r\n  }\r\n`;\r\nexport const WraperDesc = styled.div`\r\n  \r\n`;\r\n\r\nexport const Paragraf = styled.p`\r\n  font-size: 20px;\r\n  color: white;\r\n`;\r\nexport const Title = styled.h1`\r\n  margin-bottom: 12px;\r\n  color: white;\r\n`;\r\nexport const SecondTitle = styled.h2`\r\n  margin-top: 20px;\r\n  color: white;\r\n`;\r\n\r\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\r\nimport { useState, useEffect } from \"react\";\r\nimport { getApiMovie } from \"api-tmdb\";\r\nimport { Suspense } from 'react';\r\nimport {\r\n  LinkItm,\r\n  Wraper,\r\n  WraperImg,\r\n  WraperDesc,\r\n  Paragraf,\r\n  Title,\r\n  SecondTitle,\r\n  Thumb,\r\n  WraperBtn,\r\n} from './MovieDetails.styled';\r\n\r\nexport default function MovieDetails() {\r\n    const { movieId } = useParams();\r\n    const [movie, setMovie] = useState(null)\r\n    const location = useLocation()\r\n    const backLinkHref = location.state?.from ?? '/movies';\r\n    \r\n  useEffect(() => {\r\n    getApiMovie(movieId)\r\n      .then(r => {\r\n        setMovie(r.data);\r\n      })\r\n      .catch(r => {\r\n        console.error(r.response.data.status_message);\r\n      });\r\n    }, [movieId]);\r\n\r\n  \r\n    const img = 'https://fakeimg.pl/400x600'\r\n  \r\n\r\n    return (\r\n      <>\r\n        <LinkItm to={backLinkHref}>{`< Back`}</LinkItm>\r\n        {movie && (\r\n          <>\r\n            <Wraper>\r\n              <Thumb>\r\n                <WraperImg>\r\n                  <img\r\n                    src={movie.poster_path ? `https://image.tmdb.org/t/p/original${movie.poster_path}` : img}\r\n                    alt={movie.title}\r\n                  />\r\n                </WraperImg>\r\n                <WraperBtn>\r\n                  <LinkItm to=\"cast\" state={{ from: backLinkHref }}>\r\n                    Cast\r\n                  </LinkItm>\r\n                  <LinkItm to=\"reviews\" state={{ from: backLinkHref }}>\r\n                    Reviews\r\n                  </LinkItm>\r\n                </WraperBtn>\r\n              </Thumb>\r\n\r\n              <WraperDesc>\r\n                <Title>{movie.title}</Title>\r\n                <Paragraf>\r\n                  Vote averages: {movie.vote_average.toFixed(1)}\r\n                </Paragraf>\r\n                <SecondTitle>Overview</SecondTitle>\r\n                <Paragraf>{movie.overview}</Paragraf>\r\n                <SecondTitle>Genres</SecondTitle>\r\n                {movie.genres.map(genre => (\r\n                  <Paragraf key={genre.name}>{genre.name}</Paragraf>\r\n                ))}\r\n              </WraperDesc>\r\n            </Wraper>\r\n\r\n            <Suspense fallback={<Paragraf>Loading subpage...</Paragraf>}>\r\n              <Outlet />\r\n            </Suspense>\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n}\r\n"],"names":["options","method","headers","accept","Authorization","getApi","axios","get","getApiMovie","movieId","concat","getApiCasts","getApiReviews","getApiQuery","query","params","_objectSpread","LinkItm","styled","Link","_templateObject","_taggedTemplateLiteral","Wraper","div","_templateObject2","Thumb","_templateObject3","WraperImg","_templateObject4","WraperBtn","_templateObject5","WraperDesc","_templateObject6","Paragraf","p","_templateObject7","Title","h1","_templateObject8","SecondTitle","h2","_templateObject9","MovieDetails","_location$state$from","_location$state","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","backLinkHref","useLocation","state","from","useEffect","then","r","data","catch","console","error","response","status_message","_jsxs","_Fragment","children","_jsx","to","src","poster_path","alt","title","vote_average","toFixed","overview","genres","map","genre","name","Suspense","fallback","Outlet"],"sourceRoot":""}